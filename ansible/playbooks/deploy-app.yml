---
- name: Deploy Application
  hosts: all
  become: yes
  vars:
    app_dir: /opt/app
    ecr_repository_uri: "{{ lookup('env', 'ECR_REPOSITORY_URI') }}"
    redis_endpoint: "{{ lookup('env', 'REDIS_ENDPOINT') }}"
    image_tag: "{{ lookup('env', 'IMAGE_TAG') | default('latest') }}"

  tasks:
    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Create docker-compose file
      template:
        src: docker-compose.aws.yml.j2
        dest: "{{ app_dir }}/docker-compose.yml"
        owner: ec2-user
        group: ec2-user

    - name: Pull latest Docker image
      docker_image:
        name: "{{ ecr_repository_uri }}:{{ image_tag }}"
        source: pull
        force_source: yes
      become_user: ec2-user

    - name: Stop existing containers
      shell: |
        cd {{ app_dir }}
        docker-compose down || true
      become_user: ec2-user

    - name: Start application
      shell: |
        cd {{ app_dir }}
        docker-compose up -d
      become_user: ec2-user

    - name: Wait for application to be ready
      uri:
        url: http://localhost:3000
        method: GET
        timeout: 30
      retries: 10
      delay: 10